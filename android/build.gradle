buildscript {
    repositories {
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.1'
    }
}

subprojects {
    afterEvaluate {
        if (project.plugins.hasPlugin("com.android.library") || project.plugins.hasPlugin("com.android.application")) {
            android {
                compileSdkVersion target_api

                compileOptions {
                    sourceCompatibility = JavaVersion.VERSION_1_8
                    targetCompatibility = JavaVersion.VERSION_1_8
                }

                defaultConfig {
                    targetSdkVersion target_api
                    versionCode 1
                    versionName "1.0"
                    sourceCompatibility = JavaVersion.VERSION_1_8
                    targetCompatibility = JavaVersion.VERSION_1_8

                    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

                    Properties properties = new Properties()
                    File file = project.rootProject.file('local.properties')
                    if (file.exists()) {
                        properties.load(project.rootProject.file('local.properties').newDataInputStream())
                    }
                    testInstrumentationRunnerArgument "test.stitch.baseURL",
                            properties.getProperty("test.stitch.baseURL", "http://10.1.14.181:9090")
                }
                lintOptions {
                    disable 'InvalidPackage'
                }
                buildTypes {
                    debug {
                        if (project.hasProperty('withProguardMinification')) {
                            minifyEnabled true
                            testProguardFile getDefaultProguardFile('proguard-android.txt')
                        } else {
                            minifyEnabled false
                        }
                        testCoverageEnabled true
                    }
                    release {
                    }
                }
            }

            task findbugs(type: FindBugs, dependsOn: "assembleDebug") {
                excludeFilter new File(config_dir, 'findbugs-exclude.xml')
                classes = fileTree("$project.buildDir/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/mongodb")
                source 'src/main/java', 'src/test/java'
                classpath = files()
            }

            jacocoAndroidUnitTestReport {
                xml.enabled true
                html.enabled false
            }
        }
    }
}
